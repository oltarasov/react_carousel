{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","useState","currentIndex","setCurrentIndex","transformX","setTransformX","inputWidth","setInputWidth","frameSize","setFrameSize","inputAnimation","setInputAnimation","step","setStep","infinite","setInfinite","className","style","width","transform","transition","map","image","index","src","alt","type","onClick","undefined","cn","length","value","onChange","event","target","min","checked","App","state","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b4bb8ced.chunk.js","sourcesContent":["import cn from 'classnames';\nimport React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n};\n\nconst Carousel: React.FC<Props> = ({ images }) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [transformX, setTransformX] = useState(0);\n  const [inputWidth, setInputWidth] = useState('130');\n  const [frameSize, setFrameSize] = useState('3');\n  const [inputAnimation, setInputAnimation] = useState('1000');\n  const [step, setStep] = useState('3');\n  const [infinite, setInfinite] = useState(false);\n\n  const handlePrevClick = () => {\n    if (currentIndex !== undefined && currentIndex > 0) {\n      setCurrentIndex(currentIndex - +step);\n      setTransformX(transformX - (+step * 10) - +inputWidth * +step);\n    }\n  };\n\n  const handleNextClick = () => {\n    if (currentIndex !== undefined && currentIndex < images.length - 2) {\n      setCurrentIndex(currentIndex + +step);\n      setTransformX(transformX + (+step * 10) + +inputWidth * +step);\n    }\n\n    if (infinite\n      && currentIndex !== undefined\n      && (currentIndex === images.length - 1\n        || currentIndex === images.length - 2)) {\n      setTransformX(0);\n      setCurrentIndex(0);\n    }\n  };\n\n  const handleInputChangeWidth = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setInputWidth(event.target.value);\n    setTransformX(0);\n    setCurrentIndex(0);\n  };\n\n  const handleFrameSize = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setFrameSize(event.target.value);\n    setTransformX(0);\n    setCurrentIndex(0);\n  };\n\n  const handleAnimation = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setInputAnimation(event.target.value);\n  };\n\n  const handleStep = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setStep(event.target.value);\n    setTransformX(0);\n    setCurrentIndex(0);\n  };\n\n  const handleCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInfinite(event.target.checked);\n  };\n\n  return (\n    <>\n      <div\n        className=\"Carousel\"\n        style={{\n          width: +frameSize * +inputWidth + (+frameSize * 10),\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(-${transformX}px)`,\n            transition: `transform ${inputAnimation}ms ease-in-out`,\n          }}\n        >\n          {images.map((image, index) => (\n            <li key={image}>\n              <img\n                src={image}\n                alt={`index-${index}`}\n                style={{\n                  width: +inputWidth,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n        <div className=\"container\">\n          <button\n            type=\"button\"\n            onClick={handlePrevClick}\n            className={cn('button', {\n              'button--hide': currentIndex === 0,\n            })}\n          >\n            ←\n          </button>\n          <button\n            type=\"button\"\n            data-cy=\"next\"\n            onClick={handleNextClick}\n            className={cn('button', {\n              'button--hide': !infinite && currentIndex >= images.length - 2,\n            })}\n          >\n            →\n          </button>\n        </div>\n      </div>\n      <div>\n        <div>\n          Item Width:\n          <input\n            type=\"text\"\n            value={inputWidth}\n            onChange={handleInputChangeWidth}\n            className=\"input\"\n            min=\"19\"\n          />\n        </div>\n        <div>\n          Frame Size:\n          <input\n            type=\"text\"\n            value={frameSize}\n            onChange={handleFrameSize}\n            className=\"input\"\n          />\n        </div>\n        <div>\n          Step:\n          <input\n            type=\"text\"\n            value={step}\n            onChange={handleStep}\n            className=\"input\"\n          />\n        </div>\n        <div>\n          AnimationDuration:\n          <input\n            type=\"text\"\n            value={inputAnimation}\n            onChange={handleAnimation}\n            className=\"input\"\n          />\n        </div>\n        <div>\n          Infinite:\n          <input\n            type=\"checkbox\"\n            checked={infinite}\n            onChange={handleCheckboxChange}\n            className=\"input\"\n          />\n        </div>\n      </div>\n    </>\n\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1\n          data-cy=\"title\"\n        >\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel images={images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}